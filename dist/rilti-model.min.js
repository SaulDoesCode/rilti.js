{const{each:a,extend:b,isPrimitive:c,isObj:d,isArr:e,isPromise:f,isFunc:g,isDef:h}=rilti,i=(b)=>{const f={};return a(b,(a,b)=>{c(a)?f[b]=a:e(a)?f[b]=a.filter((a)=>c(a)):d(a)&&(f[b]=i(a))}),f};rilti.model=(c={})=>{const d=new Map,e=(a)=>(b,c)=>g(b)?j.on('$'+a,b):g(c)?j.on(a+':'+b,c):l[b]=c,j=b(rilti.notifier({$sync(a,b,e=b){return d.has(a)||d.set(a,new Map),d.get(a).set(e,j.on('set:'+e,(c)=>{a[b]=c})),h(c[e])&&(a[b]=c[e]),a},$syncNode:(a,b,c='textContent')=>j.sync(a,c,b),$unsync(b,c){if(d.has(b)){const e=d.get(b);c?e.has(c)&&(e.get(c).off(),e.delete(c)):a(e,(a)=>a.off()).clear(),e.size||d.delete(b)}return b},$set:e('set'),$get:e('get'),$define(a,b){return Object.defineProperty(j,a,b),j},$rm(a){return g(a)?j.on.$rm(a):(Reflect.deleteProperty(j,a),j.emit.$rm(a))},$data:()=>i(j)}),c),k=new Proxy(j,{get:(a,b)=>new Promise((a)=>{j.has(b)?a(j[b]):j.once('set:'+b,a),j.emit('get:'+b)})}),l=new Proxy((a,b,c)=>{if(!a)return j;for(c in a)j[c]=a[c],b||(j.emit('$set',c,j[c]),j.emit('set:'+c,j[c]))},{get(a,b){return'async'===b?k:b in j?(j.emit('get:'+b),j.emit('$get',b),Reflect.get(j,b)):'$'===b[0]?(b=b.slice(1),(a)=>h(a)?l[b]=a:l[b]):void 0},set(a,b,c){return f(c)?c.then((a)=>{j.emit('set:'+b,j[b]=a),j.emit('$set',b,a)}):(j.emit('set:'+b,j[b]=c),j.emit('$set',b,c)),!0},delete:(a,b)=>j.$rm(b)});return l}}