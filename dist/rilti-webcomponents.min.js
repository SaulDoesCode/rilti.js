(()=>{const{extend:a,dom:b,isFunc:c,each:d,reseat:e}=rilti;rilti.Component=(f,g)=>{if(!f.includes('-'))throw new Error(f+' is unhyphenated');const{create:h,mount:i,destroy:j,attr:k,props:l,methods:m,adopted:n}=g,o=[];k&&d(k,(q,r)=>o.push(r));const p=class extends HTMLElement{constructor(){super();const q=b(this);q.pure.isComponent=!0,l&&e(q,l),c(h)&&h.call(q,q),q.data.emit('create',q)}connectedCallback(){const q=b(this);c(i)&&i.call(q,q),q.data.emit('mount',q)}disconnectedCallback(){const q=b(this);c(j)&&j.call(q,q),q.data.emit('destroy',q)}adoptedCallback(){const q=b(this);c(n)&&n.call(q,q),q.data.emit('adopted',q)}static get observedAttributes(){return o}attributeChangedCallback(q,r,s){if(r!=s){const t=b(this);k[q].call(t,r,s,t)}}};m&&e(p.prototype,m),window.customElements.define(f,p)}})();
