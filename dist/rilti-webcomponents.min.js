{const{extend:a,isObj:b,isFunc:c}=rilti,d=(a)=>new CustomEvent(a),e=d('mount'),f=d('destroy'),g=d('create'),h=d('adopted');rilti.Component=(d,i)=>{if(!d.includes('-'))throw new Error(d+' is unhyphenated');const{create:j,mount:k,destroy:l,attr:m,props:n,methods:o,adopted:p}=i,q=b(m)?Object.keys(m):[],r=class extends HTMLElement{constructor(){super();const a=rilti.extend(this,n);c(j)&&j.call(a,a),a.dispatchEvent(g)}connectedCallback(){const a=this;c(k)&&k.call(a,a),a.dispatchEvent(e)}disconnectedCallback(){const a=this;c(l)&&l.call(a,a),a.dispatchEvent(f)}adoptedCallback(){const a=this;c(p)&&p.call(a,a),a.dispatchEvent(h)}static get observedAttributes(){return q}attributeChangedCallback(a,b,c){oldVal!==newVal&&m[a].call(this,c,b,this)}};o&&a(r.prototype,o),customElements.define(d,r)}}
