{const{isObj:a,isStr:b,isFunc:c,model:d,notifier:e,extend:f,each:g}=rilti;rilti.ws=(b,c={})=>{const d=e(),g=new WebSocket(b);return g.onopen=()=>{d.emit.open(d.isOpen=1===g.readyState)},g.onmessage=(a)=>{try{const b=JSON.parse(a.data);d.emit.msg(b,a)}catch(b){c.silent||console.warn(`rilti.ws: couldn't decode json message`),d.emit.msg(a.data,a)}},g.onerror=d.emit.err,g.onclose=d.emit.close,c.defaults||(c.defaults={}),f(d,{ws:g,close(){g.close()},set defaults(b){if(a(b))c.defaults=Object.assign(b,c.defaults);else throw new TypeError('rilti.ws: setDefaults only takes an Object')},get defaults(){return c.defaults},send(b){try{a(b)&&(b=JSON.stringify(Object.assign(b,c.defaults))),1===g.readyState?g.send(b):d.once.open(()=>g.send(b))}catch(a){c.silent||console.error(a)}}})},rilti.arrayBufferToB64=(a)=>{let c='';return new Uint8Array(a).forEach((a)=>{c+=String.fromCharCode(a)}),btoa(c)},rilti.cache=(c)=>{const d=new Set,h=e(localforage.createInstance({name:c})),i=(a,b)=>{const c='isJSON:'+a;b?(d.delete(a),h.removeItem(c)):(d.add(a),h.setItem(c,!0))},j=(a,b,c)=>{a(JSON.parse(b)),h.emit('get:'+c),d.has(c)||i(c)};h.delete=(a)=>new Promise((b,c)=>{h.removeItem(a).then(()=>{d.has(a)&&i(a,!0),b(a+' deleted'),h.emit['delete:'+a]()},(b)=>{h.emit.error(a,b),c(' an error occured while attempting to delete '+a)})});let k=!1;h.ready().then(()=>h.emit.ready(k=!0),h.emit.error);const l=new Proxy((a)=>a&&g(a,(a,b)=>l[b]=a),{set(b,c,e){if(!k)return h.once.ready(()=>l[c]=e);const f=a(e);return f?(e=JSON.stringify(e),i(c)):d.has(c)&&i(c,!0),h.setItem(c,e).then(h.emit['set:'+c],(a)=>h.emit.error(c,a)),!0},get:(a,c)=>Reflect.has(h,c)?Reflect.get(h,c):new Promise((a,e)=>{const f=()=>{h.getItem(c).then((e)=>{if(b(e)){if(d.has(c))return j(a,e,c);l['isJSON:'+c].then((b)=>b&&j(a,e,c),()=>{a(e),h.emit('get:'+c)})}else a(e),h.emit('get:'+c)}).catch((a)=>{e(a),h.emit.error(c,a)})};k?f():h.once.ready(f)})});return h.resource=(a,b='text',c)=>new Promise((d,e)=>l[a].then((f)=>f?d(f):void fetch(a,c||{method:'GET',mode:'cors'}).then((c)=>{d(l[a]=c[b]())},e),e)),h.local=new Proxy(f((b,c)=>{if(a(b))g(b,(a,b)=>h.local(b,a));else if(void 0!==c){const d=a(c);localStorage.setItem(b,d?JSON.stringify(c):c),d&&localStorage.setItem('isJSON:'+b,!0)}else return localStorage.getItem('isJSON:'+b)?JSON.parse(localStorage.getItem(b)):localStorage.getItem(b)},{clear(){localStorage.clear()},remove(...a){g(a,(a)=>{localStorage.removeItem(a),localStorage.removeItem('isJSON:'+a)})}}),{get(a,b){return b in a?a[b]:a(b)},set(a,b,c){return a(b,c)}}),l},rilti.apps={};const h={cache:!0};rilti.app=(a,b={},c={})=>{if(a in rilti.apps)return rilti.apps[a];b=f(b,h,!0);const g=d(c);return b.cache&&(g.cache=rilti.cache(a)),g.eventEmit=(a,b)=>(c,d)=>{g.emit(a,b(d,c))},rilti.apps[a]=g,(a)=>a(g,g.cache,g.cache.local)}}