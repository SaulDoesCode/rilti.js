{const{isObj:a,isFunc:b,model:c,notifier:d,extend:e}=rilti;rilti.ws=(b,c={})=>{const f=d(),g=new WebSocket(b);return g.onopen=()=>{f.emit.open(f.isOpen=1===g.readyState)},g.onmessage=(a)=>{try{const b=JSON.parse(a.data);f.emit.msg(b,a)}catch(b){c.silent||console.warn(`rilti.ws: couldn't decode json message`),f.emit.msg(a.data,a)}},g.onerror=f.emit.err,g.onclose=f.emit.close,c.defaults||(c.defaults={}),e(f,{ws:g,close(){g.close()},set defaults(b){if(a(b))c.defaults=Object.assign(b,c.defaults);else throw new TypeError('rilti.ws: setDefaults only takes an Object')},get defaults(){return c.defaults},send(b){try{a(b)&&(b=JSON.stringify(Object.assign(b,c.defaults))),1===g.readyState?g.send(b):f.once.open(()=>g.send(b))}catch(a){c.silent||console.error(a)}}})},rilti.arrayBufferToB64=(a)=>{let c='';return new Uint8Array(a).forEach((a)=>{c+=String.fromCharCode(a)}),btoa(c)},rilti.cache=(b)=>{const c=new Set,f=d(localforage.createInstance({name:b}));f.delete=(a)=>new Promise((b,d)=>{f.removeItem(a).then(()=>{c.has(a)&&c.delete(a),b(a+' deleted'),f.emit['delete:'+a]()}).catch((b)=>{f.emit.error(a,b),d(' an error occured while attempting to delete '+a)})});let g=!1;f.ready().then(()=>{f.emit.ready(g=!0)},f.emit.error);const h=new Proxy(f,{set(b,d,e){return g?(a(e)?(e=JSON.stringify(e),c.add(d)):c.has(d)&&c.delete(d),b.setItem(d,e).then(b.emit['set:'+d]).catch((a)=>{b.emit.error(d,a)}),!0):b.once.ready(()=>h[d]=e)},get:(a,b)=>Reflect.has(a,b)?Reflect.get(a,b):new Promise((d,e)=>{const f=()=>{a.getItem(b).then((e)=>{c.has(b)&&(e=JSON.parse(e)),d(e),a.emit('get:'+b)}).catch((c)=>{e(c),a.emit.error(b,c)})};g?f():a.once.ready(f)})});return f.resource=(a,b='text',c)=>new Promise((d,e)=>h[a].then((f)=>f?d(f):void fetch(a,c||{method:'GET',mode:'cors'}).then((c)=>{d(h[a]=c[b]())},e),e)),f.local=e((b,c)=>{if(a(b))each(b,(b,c)=>{localStorage.setItem(c,a(b)?JSON.stringify(b):b)});else if(void 0!==c)localStorage.setItem(b,c);else return localStorage.getItem(b)},{clear(){localStorage.clear()},remove(...a){each(a,(a)=>localStorage.removeItem(a))}}),h},rilti.apps={};const f={cache:!0};rilti.app=(a,b={},d={})=>{if(a in rilti.apps)return rilti.apps[a];b=e(b,f,!0);const g=c(d);return b.cache&&(g.cache=rilti.cache(a)),g.eventEmit=(a,b)=>(c,d)=>g.emit(a,b(d,c)),rilti.apps[a]=g,(a)=>a(g,g.cache,g.cache.local)}}